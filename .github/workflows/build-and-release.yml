name: Build and Release WAR File

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get the version from pom.xml
        id: get_version
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: List output files
        run: ls -l target/

      - name: Identify WAR file
        id: find_war
        run: echo "::set-output name=war_name::$(ls target/*.war)"

      - name: Upload WAR as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: war-file
          path: target/${{ steps.find_war.outputs.war_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release-Test v${{ env.RELEASE_VERSION }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ steps.find_war.outputs.war_name }}
          asset_name: Release-Test-v${{ env.RELEASE_VERSION }}.war
          asset_content_type: application/java-archive